{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Correlation -- Criteria","provenance":[{"file_id":"1ynb5GpgEwm0KIlzJKSPy7Y3by18XDOo3","timestamp":1611880325077},{"file_id":"1ydwyqW7XdT_-YJcBuCLGhf_QWpvcB0Rr","timestamp":1611855085846}],"collapsed_sections":[],"authorship_tag":"ABX9TyPSEyP88WOTNwcCmh9akqzs"},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"CMTPAf7MCEe-"},"source":["This notebook finds the correlation between each columns. \r\n","\r\n","\r\n"]},{"cell_type":"code","metadata":{"id":"auQhqsWlghmi","executionInfo":{"status":"ok","timestamp":1611880784942,"user_tz":300,"elapsed":18329,"user":{"displayName":"Henry Chang","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiOZGhl1SkcshsRm-a8PDhVvWgak9vy7R7uzW45-w=s64","userId":"11261548985421580714"}}},"source":["from google.colab import auth\r\n","auth.authenticate_user()\r\n","import gspread\r\n","from oauth2client.client import GoogleCredentials\r\n","import numpy as np\r\n","import pandas as pd\r\n","from tensorflow import keras\r\n","\r\n","# open data from google sheet\r\n","gc = gspread.authorize(GoogleCredentials.get_application_default())\r\n","wb = gc.open_by_key(\"1dowyRB5cO0OHwF7bIFsQhPRZHsdDaLKeGBTwRP51VL0\")\r\n","worksheet = wb.worksheet(\"Cleaned_Data_Schema\")\r\n","rows = worksheet.get_all_values()\r\n","# print(rows[0])\r\n","worksheet_type = wb.worksheet(\"Data_Type_Schema\")\r\n","worksheet_exhi  = wb.worksheet(\"included_in_exhibitions\")"],"execution_count":3,"outputs":[]},{"cell_type":"code","metadata":{"id":"Fkt-L-VAg66g"},"source":["# open sheet as panda dataframe \r\n","df_type = pd.DataFrame(worksheet_type.get_all_records())\r\n","df_exhi = pd.DataFrame(worksheet_exhi.get_all_records())\r\n","df      = pd.DataFrame(worksheet.get_all_records())\r\n","\r\n","df_exhi.describe()"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"6dupGso-AeVo","executionInfo":{"status":"ok","timestamp":1611880786518,"user_tz":300,"elapsed":19900,"user":{"displayName":"Henry Chang","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiOZGhl1SkcshsRm-a8PDhVvWgak9vy7R7uzW45-w=s64","userId":"11261548985421580714"}}},"source":["# fill all NaN values in the dataframe with 0\r\n","df.fillna(0)\r\n","label_encoders ={} \r\n","str_cols = []\r\n","\r\n","from sklearn import preprocessing\r\n","# find the columns that are not int or float. They will be converted into vector embeddings. \r\n","for typ in df_type.columns:\r\n","  if df_type.iloc[0][typ] not in [\"int\", \"float\"]:\r\n","    le = preprocessing.LabelEncoder()\r\n","    le.fit(df[typ]) # entire column \r\n","    label_encoders[typ] = le\r\n","    df[typ] = le.transform(df[typ])\r\n","  else: \r\n","    df[typ] = pd.to_numeric(df[typ])"],"execution_count":5,"outputs":[]},{"cell_type":"code","metadata":{"id":"km_3DyCUDgh9","executionInfo":{"status":"ok","timestamp":1611880799384,"user_tz":300,"elapsed":32764,"user":{"displayName":"Henry Chang","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiOZGhl1SkcshsRm-a8PDhVvWgak9vy7R7uzW45-w=s64","userId":"11261548985421580714"}}},"source":["# create training dataset \r\n","train_cols = df.columns\r\n","df[\"ex_id\"] = np.nan\r\n","train_df = pd.DataFrame(columns = train_cols)\r\n","\r\n","# create training dataset \r\n","for i in range(df_exhi.shape[0]):\r\n","  if df_exhi.iloc[i][\"num_exhibitions\"] != 0:\r\n","    for ex_id in str(df_exhi.iloc[i][\"included_in_exhibitions\"]).split(\",\"): \r\n","      em_id = df_exhi.iloc[i][\"embark_ID\"]\r\n","\r\n","      # find the row with the corresponding embark_id \r\n","      temp_df = df.loc[df[\"embark_ID\"] == int(em_id)].copy()\r\n","      temp_df[\"ex_id\"] = ex_id\r\n","\r\n","      # add to train_df\r\n","      train_df = train_df.append(temp_df)\r\n","train_df = train_df.fillna(0)\r\n","  "],"execution_count":6,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xgHYeTPaKIwb","executionInfo":{"status":"ok","timestamp":1611880799385,"user_tz":300,"elapsed":32758,"user":{"displayName":"Henry Chang","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiOZGhl1SkcshsRm-a8PDhVvWgak9vy7R7uzW45-w=s64","userId":"11261548985421580714"}},"outputId":"46581ee0-8405-46bf-8e33-d725f2909941"},"source":["for i in train_df.columns:\r\n","  train_df[i] = pd.to_numeric(train_df[i]) # downcast=\"float\"\r\n","train_df.dtypes"],"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["embark_ID          int64\n","creation_date    float64\n","start_date       float64\n","end_date         float64\n","department         int64\n","object_type        int64\n","medium             int64\n","height_mm        float64\n","width_mm         float64\n","duration         float64\n","century          float64\n","ex_id              int64\n","dtype: object"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":345},"id":"sO0F1FxQk_6d","executionInfo":{"status":"ok","timestamp":1611880799829,"user_tz":300,"elapsed":33197,"user":{"displayName":"Henry Chang","photoUrl":"https://lh3.googleusercontent.com/a-/AOh14GiOZGhl1SkcshsRm-a8PDhVvWgak9vy7R7uzW45-w=s64","userId":"11261548985421580714"}},"outputId":"8bfd0380-5811-434e-cdd5-193cf02de233"},"source":["\r\n","import seaborn as sns\r\n","sns.heatmap(train_df.corr())\r\n","#importing all the libraries needed"],"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7f8006794dd8>"]},"metadata":{"tags":[]},"execution_count":8},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 2 Axes>"]},"metadata":{"tags":[],"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"7ZLtVCTcObYj"},"source":["Reference: \r\n","\r\n","1.  [Visualize High Dimensional Data](https://www.kaggle.com/minc33/isualizing-high-dimensional-clusters)\r\n","2.   List item\r\n","\r\n","\r\n","\r\n"]},{"cell_type":"code","metadata":{"id":"08Q07bpolNzL"},"source":[""],"execution_count":null,"outputs":[]}]}